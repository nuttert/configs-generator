{{>licenseInfo}}
/*
 * HttpContent.h
 *
 * This class represents a single item of a multipart-formdata request.
 */

#pragma once

{{{defaultInclude}}}

#include <memory>

#include <cpprest/details/basic_types.h>

{{#modelNamespaceDeclarations}}
namespace {{this}} {
{{/modelNamespaceDeclarations}}

class {{declspec}} HttpContent
{
public:
    HttpContent();
    virtual ~HttpContent();

    virtual utility::string_t getContentDisposition();
    virtual void setContentDisposition( const utility::string_t& value );

    virtual utility::string_t getName();
    virtual void setName( const utility::string_t& value );

    virtual utility::string_t getFileName();
    virtual void setFileName( const utility::string_t& value );

    virtual utility::string_t getContentType();
    virtual void setContentType( const utility::string_t& value );

    virtual std::shared_ptr<std::istream> getData();
    virtual void setData( std::shared_ptr<std::istream> value );

    virtual void writeTo( std::ostream& stream );

protected:
    // NOTE: no utility::string_t here because those strings can only contain ascii
    utility::string_t contentDisposition;
    utility::string_t name;
    utility::string_t fileName;
    utility::string_t contentType;
    std::shared_ptr<std::istream> data;
};

{{#modelNamespaceDeclarations}}
}
{{/modelNamespaceDeclarations}}


